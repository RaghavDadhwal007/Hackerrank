#!/bin/python3

import math
import os
import random
import re
import sys

# Complete the climbingLeaderboard function below.
def climbingLeaderboard(scores, alice):
    scores = list(dict.fromkeys(scores))
    current_index = len(scores) - 1
    l = []
    for alice_score in alice:
        searching_position = True
        while searching_position:
            if current_index < 0:
                searching_position = False
                l.append("1")
                
            else:
                current_score = scores[current_index]
                if current_score == alice_score:
                    searching_position = False
                    l.append(current_index + 1)
                elif current_score > alice_score:
                    searching_position = False
                    l.append(current_index + 2)
                else:
                    current_index -= 1
    return l

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    scores_count = int(input())

    scores = list(map(int, input().rstrip().split()))

    alice_count = int(input())

    alice = list(map(int, input().rstrip().split()))

    result = climbingLeaderboard(scores, alice)

    fptr.write('\n'.join(map(str, result)))
    fptr.write('\n')

    fptr.close()
